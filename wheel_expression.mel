// global position var
global vector $vPos = << 0, 0, 0 >>;
// amount traveled since last eval
float $distance = 0.0;
// multiplier for position change, +/-
int $direction = 1;
// get position xyz
vector $vPosChange = `getAttr base_TopGrp.translate`;
float $cx = $vPosChange.x - $vPos.x;
float $cy = $vPosChange.y - $vPos.y;
float $cz = $vPosChange.z - $vPos.z;
// distance
float $distance = sqrt( `pow $cx 2` + `pow $cy 2` + `pow $cz 2` );
// qualify change
if ( ( $vPosChange.x == $vPos.x ) && ( $vPosChange.y != $vPos.y ) && ( $vPosChange.z == $vPos.z ) )
    {
    // no change in tx or tz position, only change is in ty
    // do nothing
    }
else 
    {
	// drive control, assumes tz is neutral forward / backward direction
    // rotateY%360 == (value divided by 360, return remainder)
	// code below figures out wheel orientation in relation to above assumption
    float $angle = base_TopGrp.rotateY%360;
    // Zpos // neutral straight, 
    // object space tz = wheel forward
    if ( $angle == 0 )
        { 
        if ( $vPosChange.z > $vPos.z ) 
            $direction = 1;
        else 
            $direction=-1;
        }
    // Xpos, wheel foward oriented to left, moving mostly in pos tx, 
    // car has turned clockwise from 0 towards 90  or
    // car has turned counterclockwise from -180 towards -270
    if ( ( $angle > 0 && $angle <= 90 ) || ( $angle < -180 && $angle >= -270 ) )
        { 
        if ( $vPosChange.x > $vPos.x )
            $direction = 1 * $direction;
        else 
            $direction = -1 * $direction; 
        }
    // Zpos, wheel forward oriented backwards, moving mostly forward in neg tz
    // car has turned clockwise from 90 towards 180 	or
    // car has turned counterclockwise from -90 towards -180
    if ( ( $angle > 90 && $angle <= 180 ) || ( $angle < -90 && $angle >= -180 ) )
        {
        if ( $vPosChange.z > $vPos.z ) 
            $direction = -1 * $direction;
        else 
            $direction = 1 * $direction; 
        }
    // Xpos, wheel foward oriented to right, moving mostly in neg tx, 
    // car has turned clockwise from 180 towards 270  or
    // car has turned counterclockwise from 0 towards -90
    if ( ( $angle > 180 && $angle <= 270 ) || ( $angle < 0 && $angle >= -90 ) )
        {
        if ( $vPosChange.x > $vPos.x ) 
            $direction = -1 * $direction;
        else 
            $direction = 1 * $direction; 
        }
    // Zpos, wheel forward oriented fowards, moving mostly forward in pos tz
    // car has turned clockwise from 270 towards 360 	or
    // car has turned counterclockwise from -270 towards -360
    if ( ( $angle > 270 && $angle <= 360 ) || ( $angle < -270 && $angle >= -360 ) ) 
        {
        if ( $vPosChange.z > $vPos.z ) 
            $direction = 1 * $direction;
        else 
            $direction = -1 * $direction; 
        }
    // set rotation attr, pi*2 = 6.283185
    base_TopGrp.Drive = base_TopGrp.Drive + ( ( $direction * ( ( $distance / ( 6.283185 * base_TopGrp.Radius ) ) * 360.0 ) ) ); 
    }
// store current position to global var for next evaluation
$vPos = << base_TopGrp.translateX, base_TopGrp.translateY, base_TopGrp.translateZ >>;