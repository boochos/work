global vector $vPos = << 0, 0, 0 >>;
float $distance = 0.0;
int $direction = 1;
vector $vPosChange = `getAttr base_TopGrp.translate`;
float $cx = $vPosChange.x - $vPos.x;
float $cy = $vPosChange.y - $vPos.y;
float $cz = $vPosChange.z - $vPos.z;
float $distance = sqrt( `pow $cx 2` + `pow $cy 2` + `pow $cz 2` );
if ( ( $vPosChange.x == $vPos.x ) && ( $vPosChange.y != $vPos.y ) && ( $vPosChange.z == $vPos.z ) ){}
else {
    float $angle = base_TopGrp.rotateY%360;
    if ( $angle == 0 ){ 
        if ( $vPosChange.z > $vPos.z ) $direction = 1;
        else $direction=-1;}
    if ( ( $angle > 0 && $angle <= 90 ) || ( $angle <- 180 && $angle >= -270 ) ){ 
        if ( $vPosChange.x > $vPos.x ) $direction = 1 * $direction;
        else $direction = -1 * $direction; }
    if ( ( $angle > 90 && $angle <= 180 ) || ( $angle < -90 && $angle >= -180 ) ){
        if ( $vPosChange.z > $vPos.z ) $direction = -1 * $direction;
        else $direction = 1 * $direction; }
    if ( ( $angle > 180 && $angle <= 270 ) || ( $angle < 0 && $angle >= -90 ) ){
        if ( $vPosChange.x > $vPos.x ) $direction = -1 * $direction;
        else $direction = 1 * $direction; }
    if ( ( $angle > 270 && $angle <= 360 ) || ( $angle < -270 && $angle >= -360 ) ) {
        if ( $vPosChange.z > $vPos.z ) $direction = 1 * $direction;
        else $direction = -1 * $direction; }
    base_TopGrp.Drive = base_TopGrp.Drive + ( ( $direction * ( ( $distance / ( 6.283185 * base_TopGrp.Radius ) ) * 360.0 ) ) ); }
$vPos = << base_TopGrp.translateX, base_TopGrp.translateY, base_TopGrp.translateZ >>;